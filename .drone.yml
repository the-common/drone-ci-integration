# Drone CI configuration file
#
# Reference:
#   - Drone CI / CD | Drone
#     https://docs.drone.io/
#   - Docker Pipelines | Drone
#     https://docs.drone.io/quickstart/docker/
#
# This file is based on The Common Drone CI Integration Template project:
# https://github.com/the-common/drone-ci-integration
#
# Copyright 2021 林博仁(Buo-ren, Lin) <Buo.Ren.Lin@gmail.com>
# SPDX-License-Identifier: CC-BY-SA-4.0

kind: pipeline
type: docker
name: Default pipeline based on the Docker runner

# Change default clone behavior
# https://docs.drone.io/pipeline/docker/syntax/cloning/
clone:
  depth: 100

  # Whether to disable certificate verification over the HTTPS protocol
  skip_verify: False

steps:
  - name: Fetching Git tags
    image: alpine/git
    # Allow failure as this stop won't work when running the build via `drone exec`
    failure: ignore
    commands:
      - git fetch --tags

  - name: Fetching Git submodules
    image: alpine/git
    commands:
      - git submodule update --init

  - name: Static code analysis
    depends_on:
      - Fetching Git tags
    image: alpine:3.12
    commands:
      - ./continuous-integration/static-code-analysis.sh

  - name: Build product release archive
    when:
      event:
        - tag
    depends_on:
      - Fetching Git tags
    image: alpine:3.12
    commands:
      - ./continuous-integration/build-product-release-archive.sh
      - ./continuous-integration/patch-template-release-archive.sh

  - name: Deliver release artifacts
    when:
      event:
        - tag
    depends_on:
      - Build product release archive
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_api_token
      files: '*.tar*'
      title: '${DRONE_TAG##v}'

  - name: Send Continuous Integration(CI) result to Telegram
    event:
      - push
      - pull_request
    when:
      status:
        - success
        - failure
    depends_on:
      - Static code analysis
    image: appleboy/drone-telegram
    settings:
      token:
        from_secret: telegram_bot_auth_token
      to: __TELEGRAM_CHAT_ID__
      format: Markdown
      message: |-
        **{{#success build.status}}✅ Continuous Intetgration(CI) is successful**{{else}}❌ Continuous Integration(CI) is not successful{{/success}}**

        📖Project: {{repo.namespace}}/{{repo.name}}
        🎋Branch: {{commit.branch}}
        👤Author: {{commit.author}}
        ✒️Revision: {{truncate commit.sha 8}}

        ```
        {{commit.message}}
        ```
        ⏲️Time spent: {{since build.started}}
        🌐Report: {{build.link}}
